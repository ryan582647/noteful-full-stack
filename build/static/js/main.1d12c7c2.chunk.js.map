{"version":3,"sources":["CircleButton/CircleButton.js","notes-helpers.js","NotesFoldersContext.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","MainContentError/MainContentError.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","ValidationError/ValidationError.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","NotesFoldersContext","createContext","notes","folders","addNote","deleteNote","addFolder","deleteFolder","NoteListNav","_this$context","this","context","react_default","a","map","folder","key","id","NavLink","to","concat","arguments","length","undefined","folderId","filter","note","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","NotePageNav","role","onClick","history","goBack","Note","_this","src_NotesFoldersContext","Consumer","noteId","noteDeleteCallbackFunc","onDeleteNote","fetch","method","then","res","ok","json","error","data","catch","console","format","modified","NoteListMain","currentFolderId","match","params","notesFiltered","keys","item","Note_Note_Note","MainContentError","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","log","react","NotePageMain","handleDeleteNote","push","currentNoteId","find","MainContentError_MainContentError","content","split","para","i","NotefulForm","assign","action","AddFolder","handleSubmit","e","preventDefault","target","value","headers","content-type","body","JSON","stringify","Promise","reject","NotefulForm_NotefulForm","onSubmit","htmlFor","ValidationError","message","Fragment","AddNote","newNote","Date","noteName","noteContent","noteFolder","noteNameValid","noteContentValid","noteFolderValid","formValid","validationMessages","noteTitle","_this2","setState","validateNoteName","_this3","validateNoteText","_this4","validateNoteFolder","fieldValue","fieldErrors","trim","_this5","_this$context$folders","onChange","updateNoteName","updateNoteContent","updateNoteFolder","disabled","App","setFoldersNotes","values","newFolderState","toConsumableArray","newNoteState","noteID","newNotes","n","apiRequest1","response","apiRequest2","combinedData","all","path","Route","exact","component","contextValue","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d12c7c2.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\n\nconst NotesFoldersContext = React.createContext({\n notes: [],\n folders: [],\n addNote: () => {},\n deleteNote: () => {},\n addFolder: () => {},\n deleteFolder: () => {},\n})\n\nexport default NotesFoldersContext","import React, { Component } from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport { countNotesForFolder } from '../notes-helpers'\nimport NotesFoldersContext from '../NotesFoldersContext'\nimport './NoteListNav.css'\n\n\nexport default class NoteListNav extends Component {\n  static contextType = NotesFoldersContext;\n  render() {\n    const { folders, notes } = this.context;\n\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}>\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )    \n  }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NotePageNav.css'\n\nexport default function NotePageNav(props) {\n  return (\n    <div className='NotePageNav'>\n      <CircleButton\n        tag='button'\n        role='link'\n        onClick={() => props.history.goBack()}\n        className='NotePageNav__back-button'\n      >\n        <FontAwesomeIcon icon='chevron-left' />\n        <br />\n        Back\n      </CircleButton>\n      {props.folder && (\n        <h3 className='NotePageNav__folder-name'>\n          {props.folder.name}\n        </h3>\n      )}\n    </div>\n  )\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport PropTypes from 'prop-types';\nimport NotesFoldersContext from '../NotesFoldersContext'\nimport './Note.css'\n\nfunction deleteNoteRequest(noteId, noteDeleteCallbackFunc) {\n  fetch(`http://localhost:9090/notes/${noteId}`, {\n    method: 'DELETE',\n  })\n    .then(res => {\n      if (!res.ok) {\n        // get the error message from the response,\n        return res.json().then(error => {\n          // then throw it\n          throw error\n        })\n      }\n      return res.json()\n    })\n    .then(data => {\n      // call the callback when the request is successful\n      // this is where the App component can remove it from state\n      noteDeleteCallbackFunc(noteId);\n      // * In our case noteDeleteCallbackFunc is context.deleteNote; We\n      //   specified this below, on line 56. Function context.deleteNote\n      //   is defined in App.js. It removes the note from App's state.\n    })\n    .catch(error => {\n      console.error(error)\n    })\n}\n\n\nexport default class Note extends Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }  \n  render() {\n    return (\n      <NotesFoldersContext.Consumer>\n        {(context) => (    \n          <div className='Note'>\n            <h2 className='Note__title'>\n              <Link to={`/note/${this.props.id}`}>\n                {this.props.name}\n              </Link>\n            </h2>\n            <button className='Note__delete' type='button'\n              onClick={() => {\n                this.props.onDeleteNote();\n                deleteNoteRequest(\n                  this.props.id,\n                  context.deleteNote,\n                  )\n            }}>\n              <FontAwesomeIcon icon='trash-alt' />\n              {' '}\n              remove\n            </button>\n            <div className='Note__dates'>\n              <div className='Note__dates-modified'>\n                Modified\n                {' '}\n                <span className='Date'>\n                  {format(this.props.modified, 'Do MMM YYYY')}\n                </span>\n              </div>\n            </div>\n          </div>\n          )}\n    </NotesFoldersContext.Consumer>\n    )\n  }\n}\n\nNote.propTypes = {\n  onDeleteNote: PropTypes.func,\n};","import React, {Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport NotesFoldersContext from '../NotesFoldersContext'\nimport './NoteListMain.css'\n\n\nexport default class NoteListMain extends Component {\n  static contextType = NotesFoldersContext;\n  render() {\n    const { notes } = this.context;\n    const currentFolderId = this.props.match.params.folderId;\n\n    let atTopLevel = Object.keys(this.props.match.params).length === 0;\n    const notesFiltered = (atTopLevel) ? notes : notes.filter(item => item.folderId === currentFolderId);\n\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesFiltered.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )    \n  }\n}","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom'\n\n\nexport default class MainContentError extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        console.log(error);\n        console.log('got error');\n        return { hasError: true };\n    }      \n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        //logErrorToMyService(error, info);\n        console.log('error');\n        console.log(error);\n        console.log('info about error');\n        console.log(info);\n    }    \n\n    render() {\n        if (this.state.hasError) {      \n          return (\n            <Fragment>\n                <h2>Could not locate this note.</h2>\n                <p>Click <Link to=\"/\">here</Link> to go back.</p>\n            </Fragment>\n          );\n        }\n        return this.props.children;\n      } \n}","import React, { Component } from 'react';\nimport Note from '../Note/Note';\nimport NotesFoldersContext from '../NotesFoldersContext';\nimport './NotePageMain.css'\nimport MainContentError from '../MainContentError/MainContentError';\n\nexport default class NotePageMain extends Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n\n  static contextType = NotesFoldersContext;\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const currentNoteId = this.props.match.params.noteId;\n    const note = this.context.notes.find(item => item.id === currentNoteId)\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n          />\n\n        <MainContentError>\n          <div className='NotePageMain__content'>\n            {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n              <p key={i}>{para}</p>\n            )}\n          </div>\n        </MainContentError>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport './NotefulForm.css'\n\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport NotesFoldersContext from '../NotesFoldersContext'\nimport './AddFolder.css'\n\nexport default class AddFolder extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {}\n    },\n  }\n  static contextType = NotesFoldersContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      name: e.target['folder-name'].value\n    }\n    fetch(`http://localhost:9090/folders/`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name'/>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.hasError) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport NotesFoldersContext from '../NotesFoldersContext';\nimport ValidationError from '../ValidationError/ValidationError';\nimport './AddNote.css';\n\nexport default class AddNote extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteName: '',\n      noteContent: '',\n      noteFolder: '',\n      noteNameValid: false,\n      noteContentValid: false,\n      noteFolderValid: false,\n      formValid: false,\n      validationMessages: {\n        noteTitle: '',\n        noteContent: '',\n        noteFolder: ''\n      }\n    }\n  }  \n\n  updateNoteName(noteName) {\n    this.setState({noteName}, () => {this.validateNoteName(noteName)});\n  }\n\n  updateNoteContent(noteContent) {\n    this.setState({noteContent}, () => {this.validateNoteText(noteContent)});\n  }\n  \n  updateNoteFolder(noteFolder) {\n    this.setState({noteFolder}, () => {this.validateNoteFolder(noteFolder)});\n  }\n\n  validateNoteName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessages};\n    let hasError = false;\n\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.noteTitle = 'Please type a note title';\n      hasError = true;\n    }\n\n    this.setState({\n      validationMessages: fieldErrors,\n      noteNameValid: !hasError\n    }, this.formValid );\n  }\n\n  validateNoteText(fieldValue) {\n    const fieldErrors = {...this.state.validationMessages};\n    let hasError = false;\n\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.noteContent = 'Please type some note text';\n      hasError = true;\n    }\n\n    this.setState({\n      validationMessages: fieldErrors,\n      noteContentValid: !hasError\n    }, this.formValid );\n  }\n\n  validateNoteFolder(fieldValue) {\n    const fieldErrors = {...this.state.validationMessages};\n    let hasError = false;\n\n    if(fieldValue === \"empty\") {\n      fieldErrors.noteFolder = 'Please select a folder';\n      hasError = true;\n    }\n\n    this.setState({\n      validationMessages: fieldErrors,\n      noteFolderValid: !hasError\n    }, this.formValid );\n  }\n\n  formValid() {\n    this.setState({\n      formValid: this.state.noteNameValid && this.state.noteContentValid && this.state.noteFolderValid\n    });\n  }\n\n  static contextType = NotesFoldersContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newNote = {\n      name: e.target['note-name'].value,\n      content: e.target['note-content'].value,\n      folderId: e.target['note-folder-id'].value,\n      modified: new Date(),\n    }\n    fetch(`http://localhost:9090/notes/`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folderId}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders=[] } = this.context\n    \n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='note-name-input' name='note-name' onChange={e => this.updateNoteName(e.target.value)} />\n            <ValidationError hasError={!this.state.noteNameValid} message={this.state.validationMessages.noteTitle}/>\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='note-content-input' name='note-content' onChange={e => this.updateNoteContent(e.target.value)} />\n            <ValidationError hasError={!this.state.noteContentValid} message={this.state.validationMessages.noteContent}/>  \n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='note-folder-select' name='note-folder-id' onChange={e => this.updateNoteFolder(e.target.value)}>\n              <option value=\"empty\">...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.name}\n                </option>\n              )}\n            </select>\n            <ValidationError hasError={!this.state.noteFolderValid} message={this.state.validationMessages.noteFolder}/>  \n          </div>\n          <div className='buttons'>\n            <button type='submit' disabled={!this.state.formValid}>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport NotesFoldersContext from '../NotesFoldersContext'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n  setFoldersNotes = values => {\n    this.setState(\n      {...values}\n    )\n  }\n\n  addFolder = (folder) => {\n    let newFolderState = [...this.state.folders, folder];\n    this.setState({folders: newFolderState});\n  }\n\n  addNote = (note) => {\n    let newNoteState = [...this.state.notes, note];\n    this.setState({notes: newNoteState});\n  }\n\n  deleteNote = noteID => {\n    const newNotes = this.state.notes.filter(n =>\n      n.id !== noteID\n    )\n    this.setState({\n      notes: newNotes\n    })\n  }\n\n  componentDidMount() {\n    let apiRequest1 = fetch('http://localhost:9090/folders').then(function (response) {\n      return response.json()\n    });\n    let apiRequest2 = fetch('http://localhost:9090/notes').then(function (response) {\n      return response.json()\n    });\n\n    let combinedData = {\n      \"folders\": {}, \"notes\": {}\n    };\n    \n    Promise.all([apiRequest1, apiRequest2]).then(function (values) {\n        combinedData[\"folders\"] = values[0];\n        combinedData[\"notes\"] = values[1];\n        return combinedData;\n      }).then(data=>{\n        this.setFoldersNotes(data)\n      })\n  }\n\n    renderNavRoutes() {\n      return (\n        <>\n          {['/', '/folder/:folderId'].map(path =>\n            <Route exact path={path}\n              key={path}\n              component={NoteListNav}\n            />\n          )}\n          <Route\n            path='/note/:noteId'\n            component={NotePageNav}\n          />\n          <Route\n            path='/add-folder'\n            component={NotePageNav}\n          />\n          <Route\n            path='/add-note'\n            component={NotePageNav}\n          />\n        </>\n      )\n    }\n\n    renderMainRoutes() {\n      return (\n        <>\n          {['/', '/folder/:folderId'].map(path =>\n            <Route exact path={path}\n              key={path}\n              component={NoteListMain}\n            />\n          )}\n          <Route\n            path='/note/:noteId'\n            component={NotePageMain}\n          />\n          <Route\n            path='/add-folder'\n            component={AddFolder}\n          />\n          <Route\n            path='/add-note'\n            component={AddNote}\n          />\n        </>\n      )\n    }\n\n    render() {\n      const contextValue = {\n        notes: this.state.notes,\n        folders: this.state.folders,\n        addNote: this.addNote,\n        deleteNote: this.deleteNote,\n        addFolder: this.addFolder,\n      }\n      return (\n        <NotesFoldersContext.Provider value={contextValue}>\n          <div className='App'>\n            <nav className='App__nav'>\n              {this.renderNavRoutes()}\n            </nav>\n            <header className='App__header'>\n              <h1>\n                <Link to='/'>Noteful</Link>\n                {' '}\n                <FontAwesomeIcon icon='check-double' />\n              </h1>\n            </header>\n            <main className='App__main'>\n              {this.renderMainRoutes()}\n            </main>\n          </div>\n        </NotesFoldersContext.Provider>\n      )\n    }\n  }\n\n  export default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}